{
    "docs": [
        {
            "location": "/", 
            "text": "Yifan's notes\n\n\nRes Severa Verum Gaudium.\n\n\nBooks and documents\n\n\nSee \nbooks and documents\n\n\nProgress bar\n\n\nSee \nprogress bar", 
            "title": "Home"
        }, 
        {
            "location": "/#yifans-notes", 
            "text": "Res Severa Verum Gaudium.", 
            "title": "Yifan's notes"
        }, 
        {
            "location": "/#books-and-documents", 
            "text": "See  books and documents", 
            "title": "Books and documents"
        }, 
        {
            "location": "/#progress-bar", 
            "text": "See  progress bar", 
            "title": "Progress bar"
        }, 
        {
            "location": "/books/", 
            "text": "Books and documents\n\n\nHere comes Yifan's reading notes of books and documents. Every chapter in a book is kept in a single page, with summary, hint, points and also questions(should be solved then).\n\n\nISDM\n\n\nIntel 64 and IA-32 Architectures Software Developer Manuals\n\n\nBy Intel", 
            "title": "Books and Documents"
        }, 
        {
            "location": "/books/#books-and-documents", 
            "text": "Here comes Yifan's reading notes of books and documents. Every chapter in a book is kept in a single page, with summary, hint, points and also questions(should be solved then).", 
            "title": "Books and documents"
        }, 
        {
            "location": "/books/#isdm", 
            "text": "Intel 64 and IA-32 Architectures Software Developer Manuals  By Intel", 
            "title": "ISDM"
        }, 
        {
            "location": "/progress/", 
            "text": "Progress bar\n\n\nHere comes Yifan's progress status of reading lists.\n\n\nShortcuts\n\n\nISDM\n\n\nProgress\n\n\n\n\n\n\n\n\nName\n\n\nStatus\n\n\nProgress\n\n\n\n\n\n\n\n\n\n\nISDM\n\n\nWIP\n\n\nStarted", 
            "title": "Progress Bar"
        }, 
        {
            "location": "/progress/#progress-bar", 
            "text": "Here comes Yifan's progress status of reading lists.", 
            "title": "Progress bar"
        }, 
        {
            "location": "/progress/#shortcuts", 
            "text": "ISDM", 
            "title": "Shortcuts"
        }, 
        {
            "location": "/progress/#progress", 
            "text": "Name  Status  Progress      ISDM  WIP  Started", 
            "title": "Progress"
        }, 
        {
            "location": "/isdm/", 
            "text": "ISDM\n\n\n\n\nChapter 1 About This Manual\n\n\nChapter 2 INTEL64 AND IA-32 ARCHITECTURES", 
            "title": "Index"
        }, 
        {
            "location": "/isdm/#isdm", 
            "text": "Chapter 1 About This Manual  Chapter 2 INTEL64 AND IA-32 ARCHITECTURES", 
            "title": "ISDM"
        }, 
        {
            "location": "/isdm/chapter1/", 
            "text": "Chapter 1 About This Manual\n\n\nSummary\n\n\nGives an overview of all five volumes of the Intel\u00ae 64 and IA-32 Architectures Software Developer\u2019s Manual. It also describes the notational conventions in these manuals and lists related Intel manuals and documentation of interest to programmers and hardware designers.\n\n\nNotational Conventions\n\n\nBit and Byte Order\n\n\nIntel 64 and IA-32 processors are \u201clittle endian\u201d machines; this means the bytes of a word are numbered starting from the least significant byte.\n\n\nReserved Bits and Software Compatibility\n\n\nInstruction operands\n\n\nlabel: mnemonic argument1, argument2, argument3\n\n\n\n\nHexadecimal numbers: 09FACH (end with \nH\n)\nBinary numbers: 1010B (end with \nB\n)\n\n\nSegement addressing\nThe processor uses byte addressing and also supports segement addressing( example: DS:FF79H and CS:EIP).\n\n\nCR: control register\n\n\nMSR: model-specific register\n\n\nFor CPUID, CR, MSR syntax, see here:\n\n\n\n\nExceptions: an event that typically occurs when an instruction causes an error. Such as divide by zero, page-fault.", 
            "title": "Chapter 1 About This Manual"
        }, 
        {
            "location": "/isdm/chapter1/#chapter-1-about-this-manual", 
            "text": "", 
            "title": "Chapter 1 About This Manual"
        }, 
        {
            "location": "/isdm/chapter1/#summary", 
            "text": "Gives an overview of all five volumes of the Intel\u00ae 64 and IA-32 Architectures Software Developer\u2019s Manual. It also describes the notational conventions in these manuals and lists related Intel manuals and documentation of interest to programmers and hardware designers.", 
            "title": "Summary"
        }, 
        {
            "location": "/isdm/chapter1/#notational-conventions", 
            "text": "Bit and Byte Order  Intel 64 and IA-32 processors are \u201clittle endian\u201d machines; this means the bytes of a word are numbered starting from the least significant byte.  Reserved Bits and Software Compatibility  Instruction operands  label: mnemonic argument1, argument2, argument3  Hexadecimal numbers: 09FACH (end with  H )\nBinary numbers: 1010B (end with  B )  Segement addressing\nThe processor uses byte addressing and also supports segement addressing( example: DS:FF79H and CS:EIP).  CR: control register  MSR: model-specific register  For CPUID, CR, MSR syntax, see here:   Exceptions: an event that typically occurs when an instruction causes an error. Such as divide by zero, page-fault.", 
            "title": "Notational Conventions"
        }, 
        {
            "location": "/isdm/chapter2/", 
            "text": "Chapter 2 INTEL64 AND IA-32 ARCHITECTURES\n\n\nSummary\n\n\nINTEL64 And IA-32 History\n\n\n\n\n\n\n16-bit Processors(1978)\n\n\n\n\nReprensent processors\n\n\n8086: 16-bit registers, 16-bit external data bus, 20-bit addressing\n\n\n8088: Similar with 8086, but 8-bit external data bus.\n\n\n\n\n\n\nPoints\n\n\nSegmentation\n\n\n\n\n\n\n\n\n\n\n\n\n80286 Processor(1982)\n\n\n\n\nProtect mode\n\n\nMemory up to 16MBytes\n\n\nMemory protect mechanisms\n\n\nSegment limit checking\n\n\nRead-only and execute-only segment options\n\n\nFour privilege levels\n\n\n\n\n\n\n\n\n\n\n\n\n80386 Processor(1985)\n\n\n\n\nFirst 32-bit processor, 32-bit registers for both operands and addressing.\n\n\nUse low-half to retain properties of 16-bit registers for backward compatibility.\n\n\nSupport\n\n\n32-bit address bus for up to 4GBytes memory\n\n\nA segmented-memory model and a flat memory model\n\n\nPaging, with a fixed 4-KByte page size providing a method for virtual memory management\n\n\nParallel stages\n\n\n\n\n\n\n\n\n\n\n\n\n80486 Processor(1989)\n\n\n\n\nMore parallel execution capability by expanding the Intel386 processor\u2019s instruction\ndecode and execution units into five pipelined stages\n\n\nAdd\n\n\n8-KByte on-chip first-level cache\n\n\nintegrated x87 FPU(Float Processing Unit)\n\n\nPower saving and system management capabilities", 
            "title": "Chapter 2 INTEL64 AND IA-32 ARCHITECTURES"
        }, 
        {
            "location": "/isdm/chapter2/#chapter-2-intel64-and-ia-32-architectures", 
            "text": "", 
            "title": "Chapter 2 INTEL64 AND IA-32 ARCHITECTURES"
        }, 
        {
            "location": "/isdm/chapter2/#summary", 
            "text": "INTEL64 And IA-32 History    16-bit Processors(1978)   Reprensent processors  8086: 16-bit registers, 16-bit external data bus, 20-bit addressing  8088: Similar with 8086, but 8-bit external data bus.    Points  Segmentation       80286 Processor(1982)   Protect mode  Memory up to 16MBytes  Memory protect mechanisms  Segment limit checking  Read-only and execute-only segment options  Four privilege levels       80386 Processor(1985)   First 32-bit processor, 32-bit registers for both operands and addressing.  Use low-half to retain properties of 16-bit registers for backward compatibility.  Support  32-bit address bus for up to 4GBytes memory  A segmented-memory model and a flat memory model  Paging, with a fixed 4-KByte page size providing a method for virtual memory management  Parallel stages       80486 Processor(1989)   More parallel execution capability by expanding the Intel386 processor\u2019s instruction\ndecode and execution units into five pipelined stages  Add  8-KByte on-chip first-level cache  integrated x87 FPU(Float Processing Unit)  Power saving and system management capabilities", 
            "title": "Summary"
        }
    ]
}